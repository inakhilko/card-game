{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack:///./src/main.js"],"sourcesContent":["// Этап 1. Создайте функцию, генерирующую массив парных чисел. Пример массива, который должна возвратить функция: [1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8].count - количество пар.\n\nfunction createNumbersArray(count) {\n  let arr = [];\n  for (let i = 1; i <= (count * count) / 2; i++) {\n    arr.push(i);\n    arr.push(i);\n  }\n  return arr;\n}\n\n// Этап 2. Создайте функцию перемешивания массива.Функция принимает в аргументе исходный массив и возвращает перемешанный массив. arr - массив чисел\n\nfunction shuffle(arr) {\n  for (let i = arr.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    [arr[i], arr[j]] = [arr[j], arr[i]];\n  }\n  return arr;\n}\n\n// Этап 3. Используйте две созданные функции для создания массива перемешанными номерами. На основе этого массива вы можете создать DOM-элементы карточек. У каждой карточки будет свой номер из массива произвольных чисел. Вы также можете создать для этого специальную функцию. count - количество пар.\n\nfunction formCreator() {\n  const container = document.querySelector(\".root\");\n  const form = document.createElement(\"form\");\n  form.classList.add(\"form\");\n  const input = document.createElement(\"input\");\n  input.classList.add(\"input\");\n  input.type = \"number\";\n  input.placeholder = \"Введите четное число\";\n  const btn = document.createElement(\"button\");\n  btn.innerHTML = \"Начать игру\";\n  btn.classList.add(\"btn\");\n  form.append(input);\n  form.append(btn);\n  container.innerHTML = \"\";\n  container.append(form);\n  form.onsubmit = (event) => {\n    event.preventDefault();\n    if (input.value >= 2 && input.value <= 10 && input.value % 2 === 0) {\n      startGame(input.value);\n    } else {\n      startGame(4);\n    }\n  };\n}\n\nfunction buttonsCreator(count) {\n  const buttons = document.createElement(\"div\");\n  buttons.classList.add(\"buttons\");\n  const btnAgain = document.createElement(\"button\");\n  btnAgain.classList.add(\"btn\");\n  btnAgain.innerHTML = \"Сыграть ещё раз\";\n  const btnNewGame = document.createElement(\"button\");\n  btnNewGame.classList.add(\"btn\");\n  btnNewGame.innerHTML = \"Поменять поле\";\n  buttons.append(btnAgain);\n  buttons.append(btnNewGame);\n  const square = document.querySelector(\".root\");\n  square.append(buttons);\n  btnAgain.addEventListener(\"click\", (event) => {\n    startGame(count);\n  });\n  btnNewGame.addEventListener(\"click\", (event) => {\n    formCreator();\n  });\n}\n\nfunction startGame(count) {\n  let firstChosen = null;\n  let isClick = true;\n  let doneCards = 0;\n\n  const cardsArr = shuffle(createNumbersArray(count));\n\n  const square = document.querySelector(\".root\");\n  square.innerHTML = \"\";\n  const timeContainer = document.createElement(\"div\");\n  timeContainer.classList.add(\"time-container\");\n  square.append(timeContainer);\n  let timeInSeconds = 60;\n  const timer = () => {\n    const timeContainer = document.querySelector(\".time-container\");\n    let minutes = Math.trunc(timeInSeconds / 60)\n      .toString()\n      .padStart(2, \"0\");\n    let seconds = (timeInSeconds % 60).toString().padStart(2, \"0\");\n    if (timeInSeconds < 0) {\n      clearInterval(id);\n      buttonsCreator(count);\n      isClick = false;\n      const cards = document.querySelectorAll(\".card\");\n      for (let card of cards) {\n        card.classList.add(\"card--opened\");\n        card.classList.add(\"failed\");\n      }\n    } else {\n      let strTimer = `${minutes}:${seconds}`;\n      timeContainer.innerHTML = strTimer;\n    }\n    --timeInSeconds;\n  };\n  timer();\n  const id = setInterval(timer, 1000);\n\n  for (let i = 0; i < count; i++) {\n    let row = document.createElement(\"div\");\n    row.classList.add(\"row\");\n\n    for (let j = 0; j < count; j++) {\n      let card = document.createElement(\"div\");\n      const front = document.createElement(\"div\");\n      const back = document.createElement(\"div\");\n      const value = cardsArr[i * count + j];\n      front.innerText = value;\n      front.classList.add(\"front\");\n      back.classList.add(\"back\");\n      card.append(front, back);\n\n      function click(event) {\n        if (!isClick) return;\n        event.currentTarget.classList.toggle(\"card--opened\");\n\n        if (firstChosen === null) {\n          firstChosen = {\n            element: event.currentTarget,\n            value,\n            function: click,\n          };\n          firstChosen.element.removeEventListener(\n            \"click\",\n            firstChosen.function\n          );\n        } else {\n          const secondChosen = event.currentTarget;\n          isClick = false;\n          setTimeout(() => {\n            if (firstChosen.value === value) {\n              firstChosen.element.classList.add(\"done\");\n              secondChosen.classList.add(\"done\");\n              doneCards += 2;\n              if (doneCards === count * count) {\n                buttonsCreator(count);\n              }\n              secondChosen.removeEventListener(\"click\", click);\n            } else {\n              firstChosen.element.classList.remove(\"card--opened\");\n              firstChosen.element.addEventListener(\n                \"click\",\n                firstChosen.function\n              );\n              secondChosen.classList.remove(\"card--opened\");\n            }\n            firstChosen = null;\n            isClick = true;\n          }, 1200);\n        }\n      }\n\n      card.addEventListener(\"click\", click);\n\n      card.classList.add(\"card\");\n      row.append(card);\n    }\n    square.append(row);\n  }\n}\n\nformCreator();\n"],"names":["formCreator","container","document","querySelector","form","createElement","classList","add","input","type","placeholder","btn","innerHTML","append","onsubmit","event","preventDefault","value","startGame","buttonsCreator","count","buttons","btnAgain","btnNewGame","addEventListener","firstChosen","isClick","doneCards","cardsArr","arr","i","length","j","Math","floor","random","_ref","shuffle","push","createNumbersArray","square","timeContainer","timeInSeconds","timer","minutes","trunc","toString","padStart","seconds","clearInterval","id","_step","_iterator","_createForOfIteratorHelper","querySelectorAll","s","n","done","card","err","e","f","strTimer","concat","setInterval","row","_loop","front","back","innerText","click","currentTarget","toggle","element","function","removeEventListener","secondChosen","setTimeout","remove"],"sourceRoot":""}